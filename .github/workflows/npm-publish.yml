# This is a workflow to publish new package on npm after github release

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
  release:
    types: [published]

jobs:
  test-build:
    name: Run test and build lib
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npm run test-lib
      - run: npm run build-lib
        env:
          TZ: Europe/Zurich

  update_release_draft:
    name: Update release draft
    needs: [test-build]
    runs-on: ubuntu-latest
    # Drafts your next Release notes as Pull Requests are merged into "master"
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  publish:
    name: Publish to npm
    needs: [test-build]
    runs-on: ubuntu-latest
    env:
      dist-directory: ./dist/lakto/horo/
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    # additional if condition: compare tag with package.json version
    # - name: Get the version
    # id: get_version
    # run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    # --> solution from https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/td-p/31595
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
      - run: npm run build-lib
      - if: "github.event.release.prerelease"
        run: cd ${{env.dist-directory}} && npm version ${{steps.previoustag.outputs.tag}} --git-tag-version=false --commit-hooks=false && npm publish --tag rc --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - if: "!github.event.release.prerelease"
        run: cd ${{env.dist-directory}} && npm version ${{steps.previoustag.outputs.tag}} --git-tag-version=false --commit-hooks=false && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
